version: '2.3'

services:
  mongo:
    image: mongo:4.2-bionic
    ports:
    - 27017:27017
    networks:
    - tsuru-net
    volumes:
    - mongo-data:/data/db
    restart: unless-stopped

  redis:
    image: redis:5.0-alpine
    ports:
    - 6379:6379
    networks:
    - tsuru-net
    volumes:
    - redis-data:/data
    restart: unless-stopped

  registry:
    image: registry:2
    ports:
    - 5000:5000
    networks:
      tsuru-net:
        ipv4_address: 172.42.0.22
    volumes:
    - registry-data:/var/lib/registry
    restart: unless-stopped

  planb:
    image: tsuru/planb
    command: --read-redis-host=redis --write-redis-host=redis
    ports:
    - 8989:8989
    networks:
      tsuru-net:
        ipv4_address: 172.42.0.21
    depends_on:
    - redis
    restart: unless-stopped

  node:
    image: docker:19.03-dind
    command: --insecure-registry registry.tsuru.172.42.0.22.nip.io:5000
    environment:
      DOCKER_TLS_CERTDIR: ""
    privileged: true
    networks:
    - tsuru-net

  api:
    image: tsuru/api:dev
    build: ./
    environment:
      TSURU_HOST: http://tsuru.172.42.0.20.nip.io:8080
      TSURU_PORT: 8080
      MONGO_URL: mongodb://mongo:27017/
      MONGO_ADDR: mongo
      REGISTRY_URL: registry.tsuru.172.42.0.22.nip.io:5000
      HIPACHE_DOMAIN: apps.tsuru.172.42.0.21.nip.io:8989
      REDIS_URL: redis:6379
    ports:
    - 8080:8080
    volumes:
    - ./etc/tsuru-compose.conf:/etc/tsuru/tsuru.conf
    networks:
      tsuru-net:
        ipv4_address: 172.42.0.20
    depends_on:
    - mongo
    - registry
    - planb
    - node
    restart: unless-stopped

networks:
  tsuru-net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.42.0.0/24

volumes:
  mongo-data:
  redis-data:
  registry-data:

